/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.3.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.example.napolya.controller;

import com.example.napolya.model.Team;
import jakarta.annotation.Generated;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;

import java.util.List;
import java.util.Optional;

public interface TeamsApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /teams : Получить список названий команд
     *
     * @return Успешный ответ с массивом названий команд (status code 200)
     */
    @RequestMapping(
            method = RequestMethod.GET,
            value = "/teams",
            produces = {"application/json"}
    )
    default ResponseEntity<List<String>> teamsGet() {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType : MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[\"Команда Победителей\",\"Лига Атлетов\"]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

    /**
     * DELETE /teams/{id} : Удалить команду
     *
     * @param id ID команды (required)
     * @return Команда успешно удалена (status code 204)
     * or Команда не найдена (status code 404)
     */
    @RequestMapping(
            method = RequestMethod.DELETE,
            value = "/teams/{id}"
    )
    default ResponseEntity<Void> teamsIdDelete(@PathVariable("id") Integer id) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

    /**
     * GET /teams/{id} : Получить информацию о команде
     *
     * @param id ID команды (required)
     * @return Информация о команде (status code 200)
     * or Команда не найдена (status code 404)
     */
    @RequestMapping(
            method = RequestMethod.GET,
            value = "/teams/{id}",
            produces = {"application/json"}
    )
    default ResponseEntity<Team> teamsIdGet(@PathVariable("id") Integer id) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType : MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"name\" : \"Команда Победителей\", \"captain_id\" : 2, \"id\" : 1, \"players_ids\" : [ 2, 3, 4 ], \"game_id\" : 1 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

    /**
     * PUT /teams/{id} : Обновить информацию о команде
     *
     * @param id ID команды (required)
     * @param team (required)
     * @return Команда успешно обновлена (status code 200)
     * or Команда не найдена (status code 404)
     */
    @RequestMapping(
            method = RequestMethod.PUT,
            value = "/teams/{id}",
            produces = {"application/json"},
            consumes = {"application/json"}
    )
    default ResponseEntity<Team> teamsIdPut(@PathVariable("id") Integer id, @RequestBody Team team) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType : MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"name\" : \"Команда Победителей\", \"captain_id\" : 2, \"id\" : 1, \"players_ids\" : [ 2, 3, 4 ], \"game_id\" : 1 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

    /**
     * POST /teams : Создать новую команду
     *
     * @param team (required)
     * @return Команда успешно создана (status code 201)
     */
    @RequestMapping(
            method = RequestMethod.POST,
            value = "/teams",
            produces = {"application/json"},
            consumes = {"application/json"}
    )
    default ResponseEntity<Team> teamsPost(@RequestBody Team team) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType : MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"name\" : \"Команда Победителей\", \"captain_id\" : 2, \"id\" : 1, \"players_ids\" : [ 2, 3, 4 ], \"game_id\" : 1 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }
}

