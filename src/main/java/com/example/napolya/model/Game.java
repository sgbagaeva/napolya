/*
 * API na_polya 3.0
 * Все необходимые API для сайта На_поля
 *
 * The version of the OpenAPI document: 1.0.11
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.napolya.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * Game
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-22T18:13:14.140549100+03:00[Europe/Moscow]")
public class Game {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_START_DATE = "start_date";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private OffsetDateTime startDate;

  /**
   * Статус игры
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    _("ожидание"),
    
    _("активная"),
    
    _("завершена"),
    
    _("запись закрыта");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_CREATOR_ID = "creator_id";
  @SerializedName(SERIALIZED_NAME_CREATOR_ID)
  private Integer creatorId;

  public static final String SERIALIZED_NAME_FIELD_ID = "field_id";
  @SerializedName(SERIALIZED_NAME_FIELD_ID)
  private Integer fieldId;

  public static final String SERIALIZED_NAME_TEAMS_IDS = "teams_ids";
  @SerializedName(SERIALIZED_NAME_TEAMS_IDS)
  private List<Integer> teamsIds = null;

  public static final String SERIALIZED_NAME_QUEUE_ID = "queue_id";
  @SerializedName(SERIALIZED_NAME_QUEUE_ID)
  private Integer queueId;


  public Game id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Уникальный идентификатор игры
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1", required = true, value = "Уникальный идентификатор игры")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public Game name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Название игры
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Мега супер игра", required = true, value = "Название игры")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Game description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Описание игры
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Друзья сыграют в дружеском матче в эту субботу.", value = "Описание игры")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public Game startDate(OffsetDateTime startDate) {
    
    this.startDate = startDate;
    return this;
  }

   /**
   * Дата и время начала игры
   * @return startDate
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "2024-11-16T15:00Z", required = true, value = "Дата и время начала игры")

  public OffsetDateTime getStartDate() {
    return startDate;
  }


  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }


  public Game status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Статус игры
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "ожидание", value = "Статус игры")

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public Game creatorId(Integer creatorId) {
    
    this.creatorId = creatorId;
    return this;
  }

   /**
   * id администратора, создавшего игру
   * @return creatorId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "2", required = true, value = "id администратора, создавшего игру")

  public Integer getCreatorId() {
    return creatorId;
  }


  public void setCreatorId(Integer creatorId) {
    this.creatorId = creatorId;
  }


  public Game fieldId(Integer fieldId) {
    
    this.fieldId = fieldId;
    return this;
  }

   /**
   * id поля, на котором будет проводиться игра
   * @return fieldId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1", required = true, value = "id поля, на котором будет проводиться игра")

  public Integer getFieldId() {
    return fieldId;
  }


  public void setFieldId(Integer fieldId) {
    this.fieldId = fieldId;
  }


  public Game teamsIds(List<Integer> teamsIds) {
    
    this.teamsIds = teamsIds;
    return this;
  }

  public Game addTeamsIdsItem(Integer teamsIdsItem) {
    if (this.teamsIds == null) {
      this.teamsIds = new ArrayList<Integer>();
    }
    this.teamsIds.add(teamsIdsItem);
    return this;
  }

   /**
   * id команд, участвующих в игре
   * @return teamsIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[10,11]", value = "id команд, участвующих в игре")

  public List<Integer> getTeamsIds() {
    return teamsIds;
  }


  public void setTeamsIds(List<Integer> teamsIds) {
    this.teamsIds = teamsIds;
  }


  public Game queueId(Integer queueId) {
    
    this.queueId = queueId;
    return this;
  }

   /**
   * id очереди на игру
   * @return queueId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "id очереди на игру")

  public Integer getQueueId() {
    return queueId;
  }


  public void setQueueId(Integer queueId) {
    this.queueId = queueId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Game game = (Game) o;
    return Objects.equals(this.id, game.id) &&
        Objects.equals(this.name, game.name) &&
        Objects.equals(this.description, game.description) &&
        Objects.equals(this.startDate, game.startDate) &&
        Objects.equals(this.status, game.status) &&
        Objects.equals(this.creatorId, game.creatorId) &&
        Objects.equals(this.fieldId, game.fieldId) &&
        Objects.equals(this.teamsIds, game.teamsIds) &&
        Objects.equals(this.queueId, game.queueId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, startDate, status, creatorId, fieldId, teamsIds, queueId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Game {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    creatorId: ").append(toIndentedString(creatorId)).append("\n");
    sb.append("    fieldId: ").append(toIndentedString(fieldId)).append("\n");
    sb.append("    teamsIds: ").append(toIndentedString(teamsIds)).append("\n");
    sb.append("    queueId: ").append(toIndentedString(queueId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

